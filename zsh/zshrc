# Lines configured by zsh-newuser-install
HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000
setopt notify
unsetopt autocd beep extendedglob
unsetopt BANG_HIST
bindkey -e

# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename "/home/pierre/.zshrc"

autoload -Uz compinit
compinit
# End of lines added by compinstall

# Shell title
# autoload -U add-zsh-hook
# set-title-as-pwd() { export TITLE=$PWD }
# add-zsh-hook chpwd set-title-as-pwd
# set-title-as-cmd() { export TITLE=$CMD }
# add-zsh-hook preexec set-title-as-cmd

# Case insensitive completion
zstyle ":completion:*" matcher-list "" "m:{[:lower:][:upper:]}={[:upper:][:lower:]}" \
       "+l:|?=** r:|?=**"

# load module for list-style selection
zmodload zsh/complist

# use the module above for autocomplete selection
zstyle ":completion:*" menu select=0 search

# Autosuggestions
AUTOSUGGESTION_FILE=/usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
if [[ -f ${AUTOSUGGESTION_FILE} ]]; then
  source ${AUTOSUGGESTION_FILE}
fi

# Syntax highlighting
SYNTAX_HIGHLIGHTING_FILE=/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
if [[ -f ${SYNTAX_HIGHLIGHTING_FILE} ]]; then
  source ${SYNTAX_HIGHLIGHTING_FILE}
fi

# History substring search
HISTORY_SUBSTRING_SEARCH_FILE=/usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
if [[ -f ${HISTORY_SUBSTRING_SEARCH_FILE} ]]; then
  source ${HISTORY_SUBSTRING_SEARCH_FILE}
  bindkey "^P" history-substring-search-up
  bindkey "^N" history-substring-search-down
fi

# Load bash aliases
ALIASES_FILE=~/.dotfiles/bash/includes/aliases.sh
if [[ -f ${ALIASES_FILE} ]]; then
  source ${ALIASES_FILE}
fi

# Starship
STARSHIP_BIN=/usr/bin/starship
if [[ -f ${STARSHIP_BIN} && "$TERM" != "dumb" ]]; then
  eval "$($STARSHIP_BIN init zsh)"
  STARSHIP_ENABLED=1
fi

# Zoxide
ZOXIDE_BIN=/usr/bin/zoxide
ZOXIDE_CMD=cd
if [[ -f ${ZOXIDE_BIN} && "$TERM" != "dumb" ]]; then
  eval "$($ZOXIDE_BIN init zsh --cmd $ZOXIDE_CMD)"
  ZOXIDE_ENABLED=1
fi

# Mise
MISE_BIN=/bin/mise
if [[ -f ${MISE_BIN} ]]; then
  eval "$($MISE_BIN activate zsh)"
  MISE_ENABLED=1
fi

# Vterm for Emacs
if [[ "$INSIDE_EMACS" = "vterm" ]] \
    && [[ -n ${EMACS_VTERM_PATH} ]] \
    && [[ -f ${EMACS_VTERM_PATH}etc/emacs-vterm-zsh.sh ]]; then
  source ${EMACS_VTERM_PATH}etc/emacs-vterm-zsh.sh
  # add-zsh-hook -Uz precmd () { print -Pn "\e]2;%2~\a" }
  add-zsh-hook -Uz chpwd () { print -Pn "\e]2;%2~\a" }
  # add-zsh-hook -Uz preexec () { print -Pn "\e]2;%2~\a" }
fi
